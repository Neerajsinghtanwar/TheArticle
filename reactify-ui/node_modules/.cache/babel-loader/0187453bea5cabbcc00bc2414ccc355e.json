{"ast":null,"code":"var _jsxFileName = \"/home/neeraj/Desktop/the-artcles/src/components/LoginPage/Login.js\";\nimport React from \"react\";\nimport './Login.css';\nimport { axios, url, wsUrl } from \"../../Store/actions/actions\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { userLogin, notifications } from \"../../Store/actions/actions\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass login extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      username: null,\n      password: null,\n      login: false,\n      notifications: null,\n      notificationsQuantity: null\n    };\n\n    this.connectWebsocket = async () => {\n      var ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n      var ws_path = ws_scheme + '://' + window.location.host + \":8001/\";\n      console.log({\n        'ws_path': ws_path\n      });\n      let ws = await new WebSocket(`${wsUrl}ws/notify/${this.props.user.username}`);\n      ws.onopen = await function () {\n        console.log('Websocket connection open...');\n      };\n      ws.addEventListener('message', event => {\n        let parseData = JSON.parse(event.data);\n        console.log({\n          'message recieved.....': parseData.msg\n        });\n        this.loadNotificationsWithAxios();\n      });\n\n      ws.onerror = function (event) {\n        console.log('Websocket error occurred...', event);\n      };\n\n      ws.onclose = function (event) {\n        console.log('Websocket closed...', event);\n      };\n    };\n\n    this.loadNotificationsWithAxios = () => {\n      let endpoint = `notification/`;\n      let token = this.props.user.token;\n      axios.get(endpoint, token).then(res => {\n        let responseData = res.data;\n        this.props.userNotificationHandler({\n          data: responseData.notifications,\n          quantity: responseData.quantity\n        });\n      });\n    };\n\n    this.submit = async username => {\n      const data = {\n        username: username,\n        password: this.state.password\n      };\n      let endpoint = `get-token/`;\n      await axios.post(endpoint, data).then(res => {\n        let responseData = res.data;\n        console.log({\n          'res-data............': responseData\n        });\n        window.localStorage.setItem('token', responseData.access);\n        window.localStorage.setItem('username', username);\n        this.props.userLoginHandler({\n          username: username,\n          login: true,\n          Authorization: 'Bearer ' + responseData.access,\n          token: {\n            headers: {\n              'Authorization': 'Bearer ' + responseData.access\n            }\n          }\n        });\n        this.loadNotificationsWithAxios();\n        this.setState({\n          login: responseData ? true : null\n        });\n      }).catch(error => console.log({\n        error\n      }));\n      this.connectWebsocket();\n    };\n\n    this.login = () => {\n      let data = new FormData();\n\n      if (this.state.username === null || this.state.password == null) {\n        document.getElementById(\"login-error\").innerText = \"*both fields are required\";\n      } else {\n        document.getElementById(\"login-error\").innerText = \"\";\n      }\n\n      if (this.state.username !== null && this.state.password !== null) {\n        data.append(\"username\", this.state.username);\n        data.append(\"password\", this.state.password);\n        let endpoint = `account/login/`;\n        axios.post(endpoint, data).then(response => {\n          const responseData = response.data;\n          let msg = responseData.error;\n\n          if (responseData.success) {\n            this.submit(responseData.username);\n          } else {\n            // document.getElementById(\"last_updated\").className =\n            //     \"alert alert-danger\";\n            // document.getElementById(\"last_updated\").innerText = msg;\n            document.getElementById(\"login-error\").innerText = responseData.msg; // window.scrollTo(0, 0);\n          }\n        }).catch(error => console.log({\n          error\n        }));\n      }\n    };\n  }\n\n  componentDidMount() {\n    document.body.style.backgroundColor = \"#dee9ff\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.state.login === false ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"registration-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-icon\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                height: \"110px\",\n                width: \"110px\"\n              },\n              src: url + \"media/images/profilePic.png\",\n              alt: \"user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control item\",\n              id: \"username\",\n              placeholder: \"Username or E-mail\",\n              onChange: e => this.setState({\n                username: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control item\",\n              id: \"password\",\n              placeholder: \"Password\",\n              onChange: e => this.setState({\n                password: e.target.value\n              }),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-block create-account\",\n              onClick: this.login,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"red\",\n              textAlign: \"left\"\n            },\n            id: \"login-error\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"signup-forgot\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/signup\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"signup-forgot-text\",\n              children: \"Register user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 48\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"or\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"signup-forgot-text\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: '/'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), \";\"]\n    }, void 0, true);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  user: state.userData.cardData\n});\n\nconst mapDispatchToProps = dispatch => ({\n  userLoginHandler: data => dispatch(userLogin(data)),\n  userNotificationHandler: data => dispatch(notifications(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(login);","map":{"version":3,"sources":["/home/neeraj/Desktop/the-artcles/src/components/LoginPage/Login.js"],"names":["React","axios","url","wsUrl","Redirect","connect","userLogin","notifications","Link","login","Component","state","username","password","notificationsQuantity","connectWebsocket","ws_scheme","window","location","protocol","ws_path","host","console","log","ws","WebSocket","props","user","onopen","addEventListener","event","parseData","JSON","parse","data","msg","loadNotificationsWithAxios","onerror","onclose","endpoint","token","get","then","res","responseData","userNotificationHandler","quantity","submit","post","localStorage","setItem","access","userLoginHandler","Authorization","headers","setState","catch","error","FormData","document","getElementById","innerText","append","response","success","componentDidMount","body","style","backgroundColor","render","height","width","e","target","value","color","textAlign","mapStateToProps","userData","cardData","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAAQC,KAAR,EAAeC,GAAf,EAAoBC,KAApB,QAAgC,6BAAhC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,aAAnB,QAAuC,6BAAvC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;;AAGA,MAAMC,KAAN,SAAoBT,KAAK,CAACU,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,QAAQ,EAAE,IAFN;AAGJJ,MAAAA,KAAK,EAAE,KAHH;AAIJF,MAAAA,aAAa,EAAE,IAJX;AAKJO,MAAAA,qBAAqB,EAAE;AALnB,KAFwB;;AAAA,SAchCC,gBAdgC,GAcb,YAAY;AAC3B,UAAIC,SAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,KAA6B,QAA7B,GAAwC,KAAxC,GAAgD,IAAhE;AACA,UAAIC,OAAO,GAAGJ,SAAS,GAAG,KAAZ,GAAoBC,MAAM,CAACC,QAAP,CAAgBG,IAApC,GAA2C,QAAzD;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAC,mBAAWH;AAAZ,OAAZ;AACA,UAAII,EAAE,GAAG,MAAM,IAAIC,SAAJ,CAAe,GAAEtB,KAAM,aAAY,KAAKuB,KAAL,CAAWC,IAAX,CAAgBf,QAAS,EAA5D,CAAf;AAEAY,MAAAA,EAAE,CAACI,MAAH,GAAY,MAAM,YAAY;AAC1BN,QAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACH,OAFD;AAIAC,MAAAA,EAAE,CAACK,gBAAH,CAAoB,SAApB,EAAgCC,KAAD,IAAW;AACtC,YAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAhB;AAEAZ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAC,mCAAwBQ,SAAS,CAACI;AAAnC,SAAZ;AACA,aAAKC,0BAAL;AACH,OALD;;AAOAZ,MAAAA,EAAE,CAACa,OAAH,GAAa,UAAUP,KAAV,EAAiB;AAC1BR,QAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CO,KAA3C;AACH,OAFD;;AAIAN,MAAAA,EAAE,CAACc,OAAH,GAAa,UAAUR,KAAV,EAAiB;AAC1BR,QAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,KAAnC;AACH,OAFD;AAGH,KAtC+B;;AAAA,SAwChCM,0BAxCgC,GAwCH,MAAM;AAC/B,UAAIG,QAAQ,GAAI,eAAhB;AACA,UAAIC,KAAK,GAAG,KAAKd,KAAL,CAAWC,IAAX,CAAgBa,KAA5B;AAEAvC,MAAAA,KAAK,CACAwC,GADL,CACSF,QADT,EACmBC,KADnB,EAEKE,IAFL,CAEWC,GAAD,IAAO;AACL,YAAIC,YAAY,GAAGD,GAAG,CAACT,IAAvB;AACA,aAAKR,KAAL,CAAWmB,uBAAX,CAAmC;AAC/BX,UAAAA,IAAI,EAAEU,YAAY,CAACrC,aADY;AAE/BuC,UAAAA,QAAQ,EAAEF,YAAY,CAACE;AAFQ,SAAnC;AAIH,OART;AASH,KArD+B;;AAAA,SAuDhCC,MAvDgC,GAuDvB,MAAOnC,QAAP,IAAoB;AAEzB,YAAMsB,IAAI,GAAG;AACTtB,QAAAA,QAAQ,EAAEA,QADD;AAETC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE;AAFZ,OAAb;AAKA,UAAI0B,QAAQ,GAAI,YAAhB;AACA,YAAMtC,KAAK,CACN+C,IADC,CACIT,QADJ,EACcL,IADd,EAEDQ,IAFC,CAEKC,GAAD,IAAQ;AACV,YAAIC,YAAY,GAAGD,GAAG,CAACT,IAAvB;AACAZ,QAAAA,OAAO,CAACC,GAAR,CAAY;AAAC,kCAAwBqB;AAAzB,SAAZ;AACA3B,QAAAA,MAAM,CAACgC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,EAAqCN,YAAY,CAACO,MAAlD;AACAlC,QAAAA,MAAM,CAACgC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,EAAwCtC,QAAxC;AAEA,aAAKc,KAAL,CAAW0B,gBAAX,CAA4B;AACxBxC,UAAAA,QAAQ,EAAEA,QADc;AAExBH,UAAAA,KAAK,EAAE,IAFiB;AAGxB4C,UAAAA,aAAa,EAAE,YAAYT,YAAY,CAACO,MAHhB;AAKxBX,UAAAA,KAAK,EAAE;AACCc,YAAAA,OAAO,EAAE;AACL,+BAAiB,YAAYV,YAAY,CAACO;AADrC;AADV;AALiB,SAA5B;AAaA,aAAKf,0BAAL;AAEA,aAAKmB,QAAL,CAAc;AAAC9C,UAAAA,KAAK,EAAEmC,YAAY,GAAC,IAAD,GAAM;AAA1B,SAAd;AAEH,OAzBC,EA0BDY,KA1BC,CA0BMC,KAAD,IAAWnC,OAAO,CAACC,GAAR,CAAY;AAACkC,QAAAA;AAAD,OAAZ,CA1BhB,CAAN;AA2BA,WAAK1C,gBAAL;AACH,KA3F+B;;AAAA,SA6FhCN,KA7FgC,GA6FxB,MAAM;AACV,UAAIyB,IAAI,GAAG,IAAIwB,QAAJ,EAAX;;AAEA,UAAI,KAAK/C,KAAL,CAAWC,QAAX,KAAwB,IAAxB,IAAgC,KAAKD,KAAL,CAAWE,QAAX,IAAuB,IAA3D,EAAiE;AAC7D8C,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmD,2BAAnD;AACH,OAFD,MAEO;AACHF,QAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmD,EAAnD;AACH;;AAED,UACE,KAAKlD,KAAL,CAAWC,QAAX,KAAwB,IAAxB,IACA,KAAKD,KAAL,CAAWE,QAAX,KAAwB,IAF1B,EAGE;AAEFqB,QAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwB,KAAKnD,KAAL,CAAWC,QAAnC;AACAsB,QAAAA,IAAI,CAAC4B,MAAL,CAAY,UAAZ,EAAwB,KAAKnD,KAAL,CAAWE,QAAnC;AAEA,YAAI0B,QAAQ,GAAI,gBAAhB;AAEAtC,QAAAA,KAAK,CACF+C,IADH,CACQT,QADR,EACkBL,IADlB,EAEGQ,IAFH,CAESqB,QAAD,IAAc;AAEpB,gBAAMnB,YAAY,GAAGmB,QAAQ,CAAC7B,IAA9B;AACA,cAAIC,GAAG,GAAGS,YAAY,CAACa,KAAvB;;AACA,cAAIb,YAAY,CAACoB,OAAjB,EAA0B;AACxB,iBAAKjB,MAAL,CAAYH,YAAY,CAAChC,QAAzB;AAED,WAHD,MAGO;AACL;AACA;AACA;AACA+C,YAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,SAAvC,GAAmDjB,YAAY,CAACT,GAAhE,CAJK,CAKL;AACD;AACF,SAhBD,EAiBGqB,KAjBH,CAiBUC,KAAD,IAAWnC,OAAO,CAACC,GAAR,CAAY;AAACkC,UAAAA;AAAD,SAAZ,CAjBpB;AAkBC;AAER,KApImC;AAAA;;AAUhCQ,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,QAAQ,CAACO,IAAT,CAAcC,KAAd,CAAoBC,eAApB,GAAsC,SAAtC;AACH;;AA0HDC,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAA,iBACK,KAAK1D,KAAL,CAAWF,KAAX,KAAmB,KAAnB,gBACD;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACQ;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACI;AACI,cAAA,KAAK,EAAE;AAAC6D,gBAAAA,MAAM,EAAE,OAAT;AAAkBC,gBAAAA,KAAK,EAAE;AAAzB,eADX;AAEK,cAAA,GAAG,EAAErE,GAAG,GAAC,6BAFd;AAGK,cAAA,GAAG,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAOI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,MAAZ;AAAmB,cAAA,SAAS,EAAC,mBAA7B;AAAiD,cAAA,EAAE,EAAC,UAApD;AAA+D,cAAA,WAAW,EAAC,oBAA3E;AACI,cAAA,QAAQ,EAAGsE,CAAD,IAAO,KAAKjB,QAAL,CAAc;AAAC3C,gBAAAA,QAAQ,EAAE4D,CAAC,CAACC,MAAF,CAASC;AAApB,eAAd,CADrB;AACgE,cAAA,QAAQ;AADxE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAPJ,eAWI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,SAAS,EAAC,mBAAjC;AAAqD,cAAA,EAAE,EAAC,UAAxD;AACG,cAAA,WAAW,EAAC,UADf;AAEG,cAAA,QAAQ,EAAGF,CAAD,IAAO,KAAKjB,QAAL,CAAc;AAAC1C,gBAAAA,QAAQ,EAAE2D,CAAC,CAACC,MAAF,CAASC;AAApB,eAAd,CAFpB;AAE+D,cAAA,QAAQ;AAFvE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAgBI;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACI;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAC,8BAAhC;AACI,cAAA,OAAO,EAAE,KAAKjE,KADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAhBJ,eAqBI;AAAG,YAAA,KAAK,EAAE;AAACkE,cAAAA,KAAK,EAAE,KAAR;AAAeC,cAAAA,SAAS,EAAE;AAA1B,aAAV;AAA6C,YAAA,EAAE,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,kBArBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADR,eAwBQ;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,SAAT;AAAA,mCAAmB;AAAI,cAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI,QAAC,IAAD;AAAM,YAAA,EAAE,EAAC,kBAAT;AAAA,mCAA4B;AAAI,cAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAxBR;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,gBAgCD,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAjCJ;AAAA,oBADJ;AAsCH;;AA9K+B;;AAiLpC,MAAMC,eAAe,GAAGlE,KAAK,KAAI;AAC7BgB,EAAAA,IAAI,EAAChB,KAAK,CAACmE,QAAN,CAAeC;AADS,CAAJ,CAA7B;;AAIA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpC7B,EAAAA,gBAAgB,EAAElB,IAAI,IAAI+C,QAAQ,CAAC3E,SAAS,CAAC4B,IAAD,CAAV,CADE;AAEpCW,EAAAA,uBAAuB,EAAEX,IAAI,IAAI+C,QAAQ,CAAC1E,aAAa,CAAC2B,IAAD,CAAd;AAFL,CAAL,CAAnC;;AAKA,eAAe7B,OAAO,CAACwE,eAAD,EAAiBG,kBAAjB,CAAP,CAA4CvE,KAA5C,CAAf","sourcesContent":["import React from \"react\";\nimport './Login.css';\nimport {axios, url, wsUrl} from \"../../Store/actions/actions\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {userLogin, notifications} from \"../../Store/actions/actions\";\nimport {Link} from \"react-router-dom\";\n\n\nclass login extends React.Component {\n\n    state = {\n        username: null,\n        password: null,\n        login: false,\n        notifications: null,\n        notificationsQuantity: null\n    }\n\n    componentDidMount() {\n        document.body.style.backgroundColor = \"#dee9ff\"\n    }\n\n    connectWebsocket = async () => {\n        var ws_scheme = window.location.protocol === \"https:\" ? \"wss\" : \"ws\";\n        var ws_path = ws_scheme + '://' + window.location.host + \":8001/\";\n        console.log({'ws_path': ws_path})\n        let ws = await new WebSocket(`${wsUrl}ws/notify/${this.props.user.username}`)\n\n        ws.onopen = await function () {\n            console.log('Websocket connection open...')\n        }\n\n        ws.addEventListener('message', (event) => {\n            let parseData = JSON.parse(event.data)\n\n            console.log({'message recieved.....':parseData.msg})\n            this.loadNotificationsWithAxios()\n        })\n\n        ws.onerror = function (event) {\n            console.log('Websocket error occurred...', event)\n        }\n\n        ws.onclose = function (event) {\n            console.log('Websocket closed...', event)\n        }\n    };\n\n    loadNotificationsWithAxios = () => {\n        let endpoint = `notification/`\n        let token = this.props.user.token\n\n        axios\n            .get(endpoint, token)\n            .then((res)=>{\n                    let responseData = res.data;\n                    this.props.userNotificationHandler({\n                        data: responseData.notifications,\n                        quantity: responseData.quantity\n                    })\n                })\n    }\n\n    submit = async (username) => {\n\n        const data = {\n            username: username,\n            password: this.state.password\n        }\n\n        let endpoint = `get-token/`\n        await axios\n            .post(endpoint, data)\n            .then((res) =>{\n                let responseData = res.data;\n                console.log({'res-data............': responseData})\n                window.localStorage.setItem('token', responseData.access)\n                window.localStorage.setItem('username', username)\n\n                this.props.userLoginHandler({\n                    username: username,\n                    login: true,\n                    Authorization: 'Bearer ' + responseData.access\n                            ,\n                    token: {\n                            headers: {\n                                'Authorization': 'Bearer ' + responseData.access\n                            }\n                    }\n\n                })\n\n                this.loadNotificationsWithAxios()\n\n                this.setState({login: responseData?true:null})\n\n            })\n            .catch((error) => console.log({error}));\n        this.connectWebsocket()\n    }\n\n    login = () => {\n        let data = new FormData();\n\n        if (this.state.username === null || this.state.password == null) {\n            document.getElementById(\"login-error\").innerText = \"*both fields are required\";\n        } else {\n            document.getElementById(\"login-error\").innerText = \"\";\n        }\n\n        if (\n          this.state.username !== null &&\n          this.state.password !== null\n        ) {\n\n        data.append(\"username\", this.state.username);\n        data.append(\"password\", this.state.password);\n\n        let endpoint = `account/login/`\n\n        axios\n          .post(endpoint, data)\n          .then((response) => {\n\n          const responseData = response.data;\n          let msg = responseData.error\n          if (responseData.success) {\n            this.submit(responseData.username);\n\n          } else {\n            // document.getElementById(\"last_updated\").className =\n            //     \"alert alert-danger\";\n            // document.getElementById(\"last_updated\").innerText = msg;\n            document.getElementById(\"login-error\").innerText = responseData.msg;\n            // window.scrollTo(0, 0);\n          }\n        })\n          .catch((error) => console.log({error}));\n        }\n\n}\n\n    render() {\n\n        return(\n            <>\n                {this.state.login===false? (\n                <div className=\"registration-form\">\n                        <form>\n                            <div className=\"form-icon\">\n                                <img\n                                    style={{height: \"110px\", width: \"110px\" }}\n                                     src={url+\"media/images/profilePic.png\"}\n                                     alt=\"user\"/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control item\" id=\"username\" placeholder=\"Username or E-mail\"\n                                    onChange={(e) => this.setState({username: e.target.value})} required/>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control item\" id=\"password\"\n                                   placeholder=\"Password\"\n                                   onChange={(e) => this.setState({password: e.target.value})} required/>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"button\" className=\"btn btn-block create-account\"\n                                    onClick={this.login}\n                                >Login</button>\n                            </div>\n                            <p style={{color: \"red\", textAlign: \"left\"}} id='login-error'></p>\n                        </form>\n                        <div className=\"signup-forgot\">\n                            <Link to='/signup'><h5 className='signup-forgot-text'>Register user</h5></Link>\n                            <h3>or</h3>\n                            <Link to='/forgot-password'><h5 className='signup-forgot-text'>Forgot Password</h5></Link>\n                        </div>\n                    </div>\n                ):(\n                <Redirect to={'/'}/>\n                )};\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state =>({\n    user:state.userData.cardData\n})\n\nconst mapDispatchToProps = dispatch => ({\n    userLoginHandler: data => dispatch(userLogin(data)),\n    userNotificationHandler: data => dispatch(notifications(data)),\n})\n\nexport default connect(mapStateToProps,mapDispatchToProps)(login)\n"]},"metadata":{},"sourceType":"module"}